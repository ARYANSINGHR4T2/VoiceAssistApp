name: Build and Release Android

on:
  push:
    branches:
      - main
      - master
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      NODE_VERSION: 18
      ANDROID_SDK_ROOT: /usr/local/lib/android/sdk
      GRADLE_USER_HOME: ${{ github.workspace }}/.gradle

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: |
          npm install
          npm install --global yarn

      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: 33
          build-tools: 33.0.0
          ndk: 25.2.9519653

      - name: Grant execute permission for gradlew
        run: chmod +x android/gradlew

      - name: Build Release APK
        run: |
          cd android
          ./gradlew clean
          ./gradlew assembleRelease

      - name: Archive APK
        uses: actions/upload-artifact@v3
        with:
          name: app-release-apk
          path: android/app/build/outputs/apk/release/app-release.apk

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download APK artifact
        uses: actions/download-artifact@v3
        with:
          name: app-release-apk
          path: ./apk

      - name: ðŸš€ Create GitHub Release
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v'))
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          files: ./apk/app-release.apk
          name: VoiceAssist ${{ startsWith(github.ref, 'refs/tags/v') && github.ref_name || 'Latest Build' }}
          tag_name: ${{ startsWith(github.ref, 'refs/tags/v') && github.ref_name || format('build-{0}', github.run_number) }}
          prerelease: ${{ !startsWith(github.ref, 'refs/tags/v') }}
          body: |
            ## ðŸ“± VoiceAssist - Voice-Controlled Accessibility App
            Latest automated release build.
